.u-number-field {
  vertical-align: bottom;
}

.u-number-field::part(root) {
  align-items: center;
}

.u-number-field::part(start),
.u-number-field::part(end) {
  align-items: center;
  column-gap: calc(var(--design-unit) * 2px);
}

.u-number-field .u-prefix,
.u-number-field .u-suffix,
.u-number-field .u-sw-changebutton {
  white-space: nowrap;
}

.u-number-field.u-sw-changebutton-shown::part(root) {
  box-sizing: content-box;
}

.u-number-field.u-sw-changebutton-shown::part(end) {
  margin-inline-end: auto;
}

/* When the number field is readonly, remove all the events on the change button and add not allowed cursor. */
.u-number-field[readonly] .u-sw-changebutton {
  pointer-events: none;
  cursor: not-allowed;
}

/* Styling the inline start border and removing the border radius (start-start, end-start) of the change button. */
.u-number-field .u-sw-changebutton::part(control) {
  border-inline-start-color: var(--neutral-stroke-rest);
  border-start-start-radius: 0;
  border-end-start-radius: 0;
}

/* Styling the border color ( according to the fluent design system) when the widget is in an invalid state and has no focus. */
.u-number-field.u-invalid:not(:focus)::part(root) {
  border-color: #d13438;
}

/* Styling the border color when the widget is in an invalid state and has focus. */
.u-number-field.u-invalid:focus-within::part(root) {
  border-color: transparent;
}

/* Styling the error icon ( according to the fluent design system ) when the widget is in an invalid state. */
.u-number-field.u-invalid .u-error-icon {
  color: #d13438;
}

.u-number-field[disabled] .u-sw-changebutton::part(control) {
  opacity: unset;
}