stages:
  - lint
  - build
  - test
  - polaris_scan
  - publish

variables:
  TARGET_VERSION: "10403"
  
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always

include:
  - project: Uniface/tools/defaults
    ref: master
    file: .gitlab-ci-defaults.yml

lint:
  stage: lint
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Linting repository"
    - npm run lint

build:
  stage: build
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Building CSS/JS bundles"
    - npm run build:prod
  artifacts:
    paths:
      - dist/

test:
  stage: test
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Running tests"
    - npm run test
  artifacts:
    paths:
      - testAutomation/test-results/
    when: always

polaris_scan:
  stage: polaris_scan
  extends: .3gl_redhatubi8_polaris_build
  tags:
    - docker-uniface-local
  script:
    - echo "Cleaning up test-results before Polaris scan..."
    - rm -rf testAutomation/test-results
    - echo "Running Polaris Scan..."
    - polaris -c polaris.yml analyze -w
  artifacts:
    paths:
      - .blackduck/polaris/
    when: always
    expire_in: 7 days
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: manual

publish:
  stage: publish
  extends: .cloudprovisioning
  tags:
    - docker-uniface-local
  dependencies:
    - build
  before_script:
    - sudo mkdir -p /cwnl/files/dib_cc
    - sudo mount -v -o nfsvers=3 -o nolock cwnl-uxshares.unifaceforest.local:/export/common/dib/cc/cc /cwnl/files/dib_cc
  script:
    - echo "Publishing artifacts to shared location"
    - TARGET_DIR="/cwnl/files/dib_cc/uxwidgets/${TARGET_VERSION}/$(date +%Y%m%d)_${CI_COMMIT_SHORT_SHA}" && mkdir -p "$TARGET_DIR"
    - test -d dist || { echo "Error :dist/ not found!"; exit 1; }
    - cp -a dist "$TARGET_DIR/"
    - echo "Artifacts copied to $TARGET_DIR"
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        cd "/cwnl/files/dib_cc/uxwidgets/${TARGET_VERSION}" && \
        ln -sfn "$(basename "$TARGET_DIR")" latest
        echo "Updated latest symlink to: $(basename "$TARGET_DIR")"
      else
        echo "Skipping latest symlink update (non-main branch)"
      fi