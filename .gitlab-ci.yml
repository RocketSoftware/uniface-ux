stages:
  - lint
  - build
  - test
  - polaris_scan
  - publish

variables:
  TARGET_VERSION: "10403"
  
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always

include:
  - project: Uniface/tools/defaults
    ref: master
    file: .gitlab-ci-defaults.yml

lint:
  stage: lint
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Linting repository"
    - npm run lint

build:
  stage: build
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Building CSS/JS bundles"
    - npm run build:prod
  artifacts:
    paths:
      - dist/

test:
  stage: test
  extends: .uxwidgets
  tags:
    - docker-uniface-local
  script:
    - echo "Running tests"
    - npm run test
  artifacts:
    paths:
      - testAutomation/test-results/
    when: always

polaris_scan:
  stage: polaris_scan
  extends: .3gl_redhatubi8_polaris_build
  tags:
    - docker-uniface-local
  script:
    - echo "Cleaning up test-results before Polaris scan..."
    - rm -rf testAutomation/test-results
    - echo "Running Polaris Scan..."
    - polaris -c polaris.yml analyze -w
  artifacts:
    paths:
      - .blackduck/polaris/
    when: always
    expire_in: 7 days
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_COMMIT_BRANCH != "main"'
      when: manual

publish:
  stage: publish
  extends: .cloudprovisioning
  tags:
    - docker-uniface-local
  dependencies:
    - build
  before_script:
    - sudo mkdir -p /cwnl/files/dib_cc
    - sudo mount -v -o nfsvers=3 -o nolock cwnl-uxshares.unifaceforest.local:/export/common/dib/cc/cc /cwnl/files/dib_cc
  script:
    - echo "Publishing artifacts to shared location"
    - TARGET_BASE="/cwnl/files/dib_cc/uxwidgets/${TARGET_VERSION}"
    - TARGET_NAME="$(date +%Y%m%d)_${CI_COMMIT_SHORT_SHA}"
    - TARGET_DIR="${TARGET_BASE}/${TARGET_NAME}" && mkdir -p "$TARGET_DIR"
    - test -d dist || { echo "Error :dist/ not found!"; exit 1; }
    - cp -a dist "$TARGET_DIR/"
    - echo "Artifacts copied to $TARGET_DIR"
    - |
      if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        ln -sfn "./${TARGET_NAME}" "${TARGET_BASE}/latest"
        echo "Updated latest symlink to: $TARGET_NAME"
        echo -e "New UX Widgets build published\n\nBUILD INFO\n------------------\nTarget Version:\t${TARGET_VERSION}\nCommit SHA:\t${CI_COMMIT_SHORT_SHA}\n\nBranch:\t${CI_COMMIT_BRANCH}\n\nPath:\t${TARGET_DIR}" > "${TARGET_DIR}/publish.txt"
        cat "${TARGET_DIR}/publish.txt" | python ${CPF_HOME}/scripts/mail.py \
          --to "uniface.lab.buildreport@rocketsoftware.com" \
          --subject "[Build Report] UX Widgets ${TARGET_VERSION} ${CI_COMMIT_SHORT_SHA}"
      else
        echo "Skipping latest symlink update (non-main branch)"
      fi
      